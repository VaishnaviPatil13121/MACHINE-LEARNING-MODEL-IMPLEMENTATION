import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Sample dataset for spam detection
data = {
    'text': [
        'Win a $1000 cash prize now!',
        'Hey, are we still on for dinner tonight?',
        'Congratulations, you have won a lottery!',
        'Your account has been compromised, please reset your password.',
        'Can you review the document I sent you?',
        'You have been selected for a free gift card!',
        'Meeting at 3 PM today in conference room.',
        'Click here to claim your prize now!'
    ],
    'label': ['spam', 'ham', 'spam', 'ham', 'ham', 'spam', 'ham', 'spam']
}

# Load data into a DataFrame
df = pd.DataFrame(data)

# Preprocessing
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['text'])  # Convert text to feature vectors
y = df['label']

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# Train a Naive Bayes classifier
model = MultinomialNB()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluation
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)

# Output results
print("Accuracy:", accuracy)
print("\nClassification Report:\n", report)
print("\nConfusion Matrix:\n", conf_matrix)
